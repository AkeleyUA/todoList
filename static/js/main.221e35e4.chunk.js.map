{"version":3,"sources":["components/modal/modal.jsx","components/tabs/tabMainLog.jsx","components/tabs/tabMainCharts.jsx","pages/home.jsx","pages/error.jsx","pages/taskInfo.jsx","store/actions.js","components/timer/timer.jsx","store/reducer.js","App.jsx","serviceWorker.js","index.js"],"names":["MyModal","props","closeModal","modalIsOpen","Modal","aria-labelledby","aria-describedby","open","onClose","style","position","top","left","width","height","background","grey","border","padding","id","color","red","Button","cyan","bottom","right","onClick","TabMainLog","tasks","timeToString","deleteTask","className","Table","TableHead","TableRow","TableCell","variant","TableBody","blue","map","task","index","isCompleted","key","name","Date","start","toLocaleTimeString","end","spend","borderRadius","type","component","NavLink","to","tabMainCharts","data","tasksGenerator","margin","strokeDasharray","dataKey","domain","fill","HomePage","error","varificationInput","tabValue","timerBtnValue","inputRef","addInterval","removeInterval","tabMainLog","tabMainChart","timer","Grid","container","direction","justify","alignItems","maxWidth","Container","Input","display","inputProps","ref","textAlign","fullWidth","placeholder","onChange","Box","fontWeight","fontSize","boxShadow","Tabs","value","Tab","label","exact","path","ErrorIdTask","paramsId","Alert","severity","size","TaskInfo","timerBtnChangeValue","newToggle","payload","verificationCanAddTask","status","changeErrorStatus","event","target","canAddTask","addNewTask","finishTask","changeTabActive","modalControler","random","min","max","Math","round","newTasksArray","randomStart","getTime","i","randomSpend","randomEnd","hour","getHours","newTasks","Timer","onUnload","localStorage","removeItem","setItem","JSON","stringify","interval","setInterval","setState","state","clearInterval","current","focus","chartsArray","push","duration","chart","minutesLeft","getMinutes","spendToMinuts","floor","excessMinutes","nextIndex","console","log","taskInfo","mustReturn","match","params","length","homePage","counter","hours","minuts","seconds","React","createRef","this","getItem","window","addEventListener","removeEventListener","Component","connect","startLastTask","dispatch","bindActionCreators","startLastTaskLocal","parse","timerBtnValueLocal","tasksLocal","initialState","chartData","rootReducer","action","filter","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","App","Boolean","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.221e35e4.chunk.js","sourcesContent":["import React from 'react';\nimport { Modal, Button } from '@material-ui/core';\nimport { cyan, grey, red } from '@material-ui/core/colors';\n\nconst MyModal = (props) => {\n  const { closeModal, modalIsOpen } = props;\n  return (\n    <Modal\n      aria-labelledby=\"simple-modal-title\"\n      aria-describedby=\"simple-modal-description\"\n      open={modalIsOpen}\n      onClose={closeModal}\n    >\n      <div style={{\n        position: 'absolute',\n        top: '30%',\n        left: '30%',\n        width: 600,\n        height: 100,\n        background: grey[50],\n        border: '2px solid #000',\n        padding: 20,\n      }}\n      >\n        <h2 id=\"simple-modal-title\" style={{ color: red[500] }}>Empty task name</h2>\n        <p id=\"simple-modal-description\">\n          Your are tring close your task without name, enter the title and try again!\n        </p>\n        <Button\n          style={{\n            color: cyan[500],\n            position: 'absolute',\n            bottom: 15,\n            right: 15,\n          }}\n          onClick={closeModal}\n        >\n          Close\n        </Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default MyModal;\n","import React from 'react';\nimport { grey, blue } from '@material-ui/core/colors';\nimport { NavLink } from 'react-router-dom';\nimport {\n  Button,\n  Table,\n  TableHead,\n  TableBody,\n  TableRow,\n  TableCell,\n} from '@material-ui/core';\n\nconst TabMainLog = (props) => {\n  const { tasks, timeToString, deleteTask } = props;\n  return (\n    <div className=\"tabs-main\">\n      <Table className=\"tasks-log\">\n        <TableHead>\n          <TableRow>\n            <TableCell variant=\"body\">№</TableCell>\n            <TableCell variant=\"body\">Task</TableCell>\n            <TableCell variant=\"body\">Time start</TableCell>\n            <TableCell variant=\"body\">Time end</TableCell>\n            <TableCell variant=\"body\">Time spend</TableCell>\n            <TableCell variant=\"body\">Info</TableCell>\n            <TableCell variant=\"body\">Delete</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody style={{ color: blue[900] }}>\n          {tasks.map((task, index) => {\n            if (task.isCompleted) {\n              return (\n                <TableRow id={task.id} key={task.id} style={{ background: blue[100] }}>\n                  <TableCell variant=\"head\"><div>{index + 1}</div></TableCell>\n                  <TableCell variant=\"head\"><div>{task.name}</div></TableCell>\n                  <TableCell variant=\"head\">\n                    <div>\n                      {new Date(task.start).toLocaleTimeString()}\n                    </div>\n                  </TableCell>\n                  <TableCell variant=\"head\">\n                    <div>\n                      {new Date(task.end).toLocaleTimeString()}\n                    </div>\n                  </TableCell>\n                  <TableCell variant=\"head\"><div>{timeToString(task.spend)}</div></TableCell>\n                  <TableCell variant=\"head\">\n                    <Button\n                      style={{\n                        background: grey[50],\n                        borderRadius: 0,\n                      }}\n                      type=\"button\"\n                      color=\"primary\"\n                      component={NavLink}\n                      to={`task/${task.id}`}\n                    >\n                      Info\n                    </Button>\n                  </TableCell>\n                  <TableCell variant=\"head\">\n                    <Button\n                      style={{ background: grey[50], borderRadius: 0 }}\n                      type=\"button\"\n                      onClick={() => {\n                        deleteTask(task.id);\n                      }}\n                      color=\"primary\"\n                    >\n                      Delete\n                    </Button>\n                  </TableCell>\n                </TableRow>\n              );\n            }\n            return null;\n          })}\n        </TableBody>\n      </Table>\n    </div>\n  );\n};\n\nexport default TabMainLog;\n","import React from 'react';\nimport { Button } from '@material-ui/core';\nimport { blue } from '@material-ui/core/colors';\nimport {\n  BarChart,\n  Bar,\n  XAxis,\n  YAxis,\n  Legend,\n  CartesianGrid,\n  ResponsiveContainer,\n} from 'recharts';\n\nconst tabMainCharts = (props) => {\n  const { data, tasksGenerator } = props;\n  return (\n    <>\n      <ResponsiveContainer height={430}>\n        <BarChart\n          data={data}\n          margin={{\n            top: 50,\n            right: 20,\n            bottom: 50,\n            left: 20,\n          }}\n        >\n          <CartesianGrid strokeDasharray=\"3 3\" />\n          <XAxis dataKey=\"hour\" domain={[0, 24]} />\n          <YAxis domain={[0, 60]} />\n          <Legend />\n          <Bar name=\"Minuts in this hours\" dataKey=\"duration\" fill={blue[900]} width={30} />\n        </BarChart>\n      </ResponsiveContainer>\n      <Button style={{ position: 'fixed', bottom: 50, right: 50 }} variant=\"contained\" onClick={tasksGenerator}>generate</Button>\n    </>\n  );\n};\n\nexport default tabMainCharts;\n","import React from 'react';\nimport { Button, Grid, Input, Container, Box, Tabs, Tab } from '@material-ui/core';\nimport { cyan, grey, blue, red } from '@material-ui/core/colors';\nimport { Route, NavLink } from 'react-router-dom';\n\nconst HomePage = (props) => {\n  const {\n    error,\n    varificationInput,\n    tabValue,\n    timerBtnValue,\n    inputRef,\n    timeToString,\n    addInterval,\n    removeInterval,\n    tabMainLog,\n    tabMainChart,\n    timer,\n  } = props;\n\n  return (\n    <div style={{ height: 1000 }}>\n      <Grid\n          container\n          direction=\"column\"\n          justify=\"center\"\n          alignItems=\"center\"\n          style={{\n            maxWidth: 1440,\n            margin: '0 auto',\n          }}\n        >\n          <Container maxWidth={false} className=\"task-init\">\n            <Input\n              id=\"standard-basic\"\n              style={{\n                width: \"300px\",\n                margin: \"0 auto\",\n                display: \"flex\",\n              }}\n              error={error}\n              inputProps={{\n                ref: inputRef,\n                className: \"input-task-name\",\n                style: {\n                  color:(error ? red[500] : blue[900]),\n                  textAlign: 'center',\n                },\n              }}\n              fullWidth={true}\n              placeholder=\"Name of your task\"\n              onChange={varificationInput}\n            />\n            <Box className=\"circle\" color=\"primary.main\" fontWeight=\"500\" fontSize={20}>\n              <p className=\"time\">{timeToString(timer)}</p>\n            </Box>\n            <Button\n              variant=\"text\"\n              color=\"primary\"\n              type=\"button\"\n              onClick={timerBtnValue === 'start' ? addInterval : removeInterval}\n              style={{\n                margin: '0 auto 30px auto',\n                display: 'flex',\n                boxShadow: '0 0 3px rgba(0, 0, 0, 0.3)',\n              }}\n            >\n              {timerBtnValue}\n            </Button>\n          </Container>\n          <Tabs style={{ width: '100%', background: cyan[700] }} variant=\"fullWidth\" value={tabValue}>\n            <Tab style={{ color: grey[50] }} label={`Tasks log`} component={NavLink} to=\"/todoList/\" />\n            <Tab style={{ color: grey[50] }} label={`Tasks chart`} component={NavLink} to=\"/todoList/tasks-chart\" />\n          </Tabs>\n          <Route exact path=\"/todoList/\" component={tabMainLog} />\n          <Route path=\"/todoList/tasks-chart\" component={tabMainChart} />\n        </Grid>\n      </div>\n  );\n};\n\nexport default HomePage;\n","import React from 'react';\nimport { Alert } from '@material-ui/lab';\nimport { Button } from '@material-ui/core';\nimport { NavLink } from 'react-router-dom';\nimport { grey } from '@material-ui/core/colors';\n\nconst ErrorIdTask = (props) => {\n  const { paramsId } = props;\n  return (\n    <>\n      <Alert severity=\"error\" style={{ margin: 30 }}>\n        A task with id:\n        {paramsId}\n        does not exist.\n      </Alert>\n      <div style={{\n        maxWidth: 1440,\n        margin: '0 auto',\n        textAlign: 'center',\n        padding: '30px 0',\n      }}\n      >\n        <Button\n          style={{\n            background: grey[50],\n            boxShadow: '0 0 3px rgba(0, 0, 0, 0.3)',\n          }}\n          size=\"large\"\n          type=\"button\"\n          color=\"primary\"\n          component={NavLink}\n          to=\"/todoList/\"\n        >\n          Home\n        </Button>\n      </div>\n    </>\n  );\n};\n\nexport default ErrorIdTask;\n","import React from 'react';\nimport { grey, blue } from '@material-ui/core/colors';\nimport { NavLink } from 'react-router-dom';\nimport {\n  Button,\n  Table,\n  TableHead,\n  TableBody,\n  TableRow,\n  TableCell,\n} from '@material-ui/core';\n\nconst TaskInfo = (props) => {\n  const { deleteTask, task, timeToString } = props;\n  return (\n    <>\n      <Table\n        className=\"tasks-log\"\n        style={{\n          maxWidth: 1440,\n          margin: '0 auto',\n        }}\n      >\n        <TableHead>\n          <TableRow>\n            <TableCell variant=\"body\">ID</TableCell>\n            <TableCell variant=\"body\">Task</TableCell>\n            <TableCell variant=\"body\">Time start</TableCell>\n            <TableCell variant=\"body\">Time end</TableCell>\n            <TableCell variant=\"body\">Time spend</TableCell>\n            <TableCell variant=\"body\">Delete</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody style={{ color: blue[900] }}>\n          <TableRow id={task.id} style={{ background: blue[100] }}>\n            <TableCell variant=\"head\"><div>{task.id}</div></TableCell>\n            <TableCell variant=\"head\"><div>{task.name}</div></TableCell>\n            <TableCell variant=\"head\">\n              <div>\n                {new Date(task.start).toLocaleTimeString()}\n              </div>\n            </TableCell>\n            <TableCell variant=\"head\">\n              <div>\n                {new Date(task.end).toLocaleTimeString()}\n              </div>\n            </TableCell>\n            <TableCell variant=\"head\"><div>{timeToString(task.spend)}</div></TableCell>\n            <TableCell variant=\"head\">\n              <Button\n                style={{ background: grey[50], borderRadius: 0 }}\n                type=\"button\"\n                component={NavLink}\n                onClick={() => {\n                  deleteTask(task.id);\n                }}\n                to=\"/\"\n                color=\"primary\"\n              >\n                Delete\n              </Button>\n            </TableCell>\n          </TableRow>\n        </TableBody>\n      </Table>\n      <div\n        style={{\n          width: '100%',\n          textAlign: 'center',\n          padding: '30px 0',\n        }}\n      >\n        <Button\n          style={{\n            background: grey[50],\n            boxShadow: '0 0 3px rgba(0, 0, 0, 0.3)',\n          }}\n          size=\"large\"\n          type=\"button\"\n          color=\"primary\"\n          component={NavLink}\n          to=\"/todoList/\"\n        >\n          Home\n        </Button>\n      </div>\n    </>\n  );\n};\n\nexport default TaskInfo;\n","export const TIMER_BTN_CHANGE_VALUE = 'TIMER_BTN_CHANGE_VALUE';\nexport const VERIFICATION_CAN_ADD_TASK = 'VERIFICATION_CAN_ADD_TASK';\nexport const CHANGE_ERROR_STATUS = 'CHANGE_ERROR_STATUS';\nexport const VARIFICATION_INPUT = 'VARIFICATION_INPUT';\nexport const ADD_TASK = 'ADD_TASK';\nexport const FINISH_TASK = 'FINISH_TASK';\nexport const DELETE_TASK = 'DELETE_TASK';\nexport const TAB_CHANGE_ACTIVE = 'TAB_CHANGE_ACTIVE';\nexport const MODAL_CONTROLER = 'MODAL_CONTROLER';\nexport const GENERETE_TASKS = 'GENERETE_TASKS';\n\nexport const timerBtnChangeValue = (newToggle) => ({\n  type: TIMER_BTN_CHANGE_VALUE,\n  payload: newToggle,\n});\n\nexport const verificationCanAddTask = (status) => ({\n  type: VERIFICATION_CAN_ADD_TASK,\n  payload: status,\n});\n\nexport const changeErrorStatus = (status) => ({\n  type: CHANGE_ERROR_STATUS,\n  payload: status,\n});\n\nexport const varificationInput = (event) => {\n  let mustReturn = {};\n  if (event.target.value !== '' && event.target.value !== ' ') {\n    mustReturn = {\n      type: VARIFICATION_INPUT,\n      error: false,\n      canAddTask: true,\n    };\n  } else {\n    mustReturn = {\n      type: VARIFICATION_INPUT,\n      error: true,\n      canAddTask: false,\n    };\n  }\n  return mustReturn;\n};\n\nexport const addNewTask = (task) => ({\n  type: ADD_TASK,\n  payload: task,\n});\n\nexport const finishTask = (task) => ({\n  type: FINISH_TASK,\n  payload: task,\n});\n\nexport const deleteTask = (id) => ({\n  type: DELETE_TASK,\n  id,\n});\n\nexport const changeTabActive = (value) => ({\n  type: TAB_CHANGE_ACTIVE,\n  value,\n});\n\n\nexport const modalControler = (status) => ({\n  type: MODAL_CONTROLER,\n  modalIsOpen: status,\n});\n\nexport const tasksGenerator = () => {\n  const random = (min, max) => Math.round(Math.random() * (max - min) + min);\n  let newTasksArray = [];\n  let randomStart = new Date().getTime() - 43200000;\n  for (let i = 0; i < random(10, 15); i++) {\n    const randomSpend = random(600000, 5400000);\n    const randomEnd = randomStart + randomSpend;\n    newTasksArray = [...newTasksArray, {\n      id: randomStart,\n      start: randomStart,\n      end: randomEnd,\n      spend: randomSpend,\n      isCompleted: true,\n      hour: new Date(randomStart).getHours(),\n      name: `random task №${i + 1}`,\n    }];\n    randomStart = randomEnd + random(0, 600000);\n  }\n  return {\n    type: GENERETE_TASKS,\n    newTasks: newTasksArray,\n  };\n};\n","import React from 'react';\nimport './timer.css';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { Route } from 'react-router-dom';\n\nimport MyModal from '../modal/modal';\nimport TabMainLog from '../tabs/tabMainLog';\nimport TabMainCharts from '../tabs/tabMainCharts';\nimport HomePage from '../../pages/home';\nimport ErrorIdTask from '../../pages/error';\nimport TaskInfo from '../../pages/taskInfo';\nimport {\n  timerBtnChangeValue,\n  verificationCanAddTask,\n  changeErrorStatus,\n  varificationInput,\n  addNewTask,\n  finishTask,\n  deleteTask,\n  changeTabActive,\n  modalControler,\n  tasksGenerator,\n} from '../../store/actions';\n\nclass Timer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      timer: 0,\n      interval: null,\n    };\n    this.inputRef = React.createRef();\n  }\n\n  componentDidMount() {\n    const { timerBtnValue } = this.props;\n    const start = localStorage.getItem('startLastTask');\n    if (timerBtnValue === 'stop') {\n      const interval = setInterval(() => (this.setState({ timer: new Date().getTime() - start })), 1000);\n      this.setState({ interval });\n    }\n    window.addEventListener('unload', this.onUnload);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('unload', this.onUnload);\n  }\n\n  onUnload = () => {\n    const { tasks } = this.props;\n    localStorage.removeItem('tasks');\n    localStorage.setItem('tasks', JSON.stringify(tasks));\n  }\n\n  addInterval = () => {\n    const { timerBtnChangeValue, addNewTask } = this.props;\n    const start = new Date();\n    localStorage.setItem('startLastTask', start.getTime());\n    localStorage.setItem('timerStatus', 'stop');\n    addNewTask({ start: start.getTime(), hour: start.getHours(), isCompleted: false });\n    timerBtnChangeValue('stop');\n\n    // Redux saga\n    const interval = setInterval(() => (this.setState({ timer: new Date().getTime() - start })), 1000);\n    this.setState({ interval });\n  }\n\n  removeInterval = () => {\n    const {\n      canAddTask,\n      verificationCanAddTask,\n      changeErrorStatus,\n      timerBtnChangeValue,\n      finishTask,\n      modalControler,\n    } = this.props;\n    const { interval } = this.state;\n\n    if (canAddTask) {\n      clearInterval(interval);\n      this.setState({ timer: 0 });\n      timerBtnChangeValue('start');\n      finishTask({\n        end: new Date().getTime(),\n        name: this.inputRef.current.value,\n        isCompleted: true,\n      });\n      changeErrorStatus(false);\n      verificationCanAddTask(false);\n      localStorage.removeItem('startLastTask');\n      localStorage.removeItem('timerStatus');\n      this.inputRef.current.value = '';\n    } else {\n      changeErrorStatus(true);\n      modalControler(true);\n      this.inputRef.current.focus();\n    }\n  }\n\n  tabMainLog = () => {\n    const { deleteTask, changeTabActive, tasks, tabValue } = this.props;\n    if (tabValue === 1) {\n      changeTabActive(0);\n    }\n    return (\n      <TabMainLog deleteTask={deleteTask} tasks={tasks} timeToString={this.timeToString} />\n    );\n  }\n\n  tabMainChart = () => {\n    const { changeTabActive, tasks, tabValue, tasksGenerator } = this.props;\n    const chartsArray = [];\n    if (tabValue === 0) {\n      changeTabActive(1);\n    }\n\n    for (let i = 0; i < 24; i++) {\n      chartsArray.push({ hour: i, duration: 0 });\n    }\n\n    chartsArray.map((chart, index) => {\n      tasks.map((task) => {\n        const minutesLeft = 60 - new Date(task.start).getMinutes();\n        if (chart.hour === task.hour) {\n          const spendToMinuts = (task.spend / 1000 / 60);\n          if (spendToMinuts <= minutesLeft) {\n            chart.duration += Math.floor(spendToMinuts);\n          } else if (spendToMinuts > minutesLeft) {\n            chart.duration += Math.floor(minutesLeft);\n            const excessMinutes = spendToMinuts - minutesLeft;\n            if (index < 23) {\n              for (let i = 1; i < Math.floor(excessMinutes / 60) + 1; i++) {\n                const nextIndex = index + i;\n                chartsArray[(nextIndex > 23 ? nextIndex - 24 : nextIndex)].duration = 60;\n              }\n              chartsArray[\n                (index + 1 + Math.floor(excessMinutes / 60) > 23\n                  ? index + 1 + Math.floor(excessMinutes / 60) - 24\n                  : index + 1 + Math.floor(excessMinutes / 60)\n                )].duration = Math.floor(excessMinutes % 60);\n            }\n          }\n        }\n        return task;\n      });\n      console.log(chart);\n      return chart;\n    });\n    return (\n      <TabMainCharts data={chartsArray} tasksGenerator={tasksGenerator} />\n    );\n  }\n\n  closeModal = () => {\n    const { modalControler } = this.props;\n    modalControler(false);\n  }\n\n  taskInfo = (props) => {\n    const { deleteTask, tasks } = this.props;\n    let mustReturn = <ErrorIdTask paramsId={props.match.params.id} />;\n    if (tasks.length > 0) {\n      tasks.map((task) => {\n        if (+props.match.params.id === task.id) {\n          mustReturn = <TaskInfo deleteTask={deleteTask} task={task} timeToString={this.timeToString} />;\n        }\n        return task;\n      });\n    }\n    return mustReturn;\n  }\n\n  homePage = () => {\n    const {\n      error,\n      timerBtnValue,\n      varificationInput,\n      tabValue,\n      modalIsOpen,\n    } = this.props;\n    const { timer } = this.state;\n    return (\n      <>\n        <MyModal\n          modalIsOpen={modalIsOpen}\n          closeModal={this.closeModal}\n          timeToString={this.timeToString}\n        />\n        <HomePage\n          error={error}\n          timer={timer}\n          varificationInput={varificationInput}\n          tabValue={tabValue}\n          timerBtnValue={timerBtnValue}\n          inputRef={this.inputRef}\n          timeToString={this.timeToString}\n          addInterval={this.addInterval}\n          removeInterval={this.removeInterval}\n          tabMainLog={this.tabMainLog}\n          tabMainChart={this.tabMainChart}\n        />\n      </>\n    );\n  }\n\n  timeToString = (counter) => {\n    const hours = Math.floor((counter / 1000 / 60 / 60) % 60);\n    const minuts = Math.floor((counter / 1000 / 60) % 60);\n    const seconds = Math.floor((counter / 1000) % 60);\n    return `${(hours < 10 ? `0${hours}` : hours)}:${(minuts < 10 ? `0${minuts}` : minuts)}:${(seconds < 10 ? `0${seconds}` : seconds)} `;\n  }\n\n\n  render() {\n    return (\n      <>\n        <Route exact path=\"/todoList/\" component={(this.homePage)} />\n        <Route path=\"/todoList/task/:id\" component={this.taskInfo} />\n        <Route path=\"/todoList/tasks-chart\" component={this.homePage} />\n      </>\n    );\n  }\n}\n\n\nconst mapStateToProps = (state) => ({\n  timerBtnValue: state.timerBtnValue,\n  counter: state.counter,\n  canAddTask: state.canAddTask,\n  error: state.error,\n  tasks: state.tasks,\n  tabValue: state.tabValue,\n  modalIsOpen: state.modalIsOpen,\n  isCompleted: state.isCompleted,\n  startLastTask: state.startLastTask,\n});\n\nconst mapDispathToProps = (dispatch) => ({\n  timerBtnChangeValue: bindActionCreators(timerBtnChangeValue, dispatch),\n  verificationCanAddTask: bindActionCreators(verificationCanAddTask, dispatch),\n  changeErrorStatus: bindActionCreators(changeErrorStatus, dispatch),\n  varificationInput: bindActionCreators(varificationInput, dispatch),\n  addNewTask: bindActionCreators(addNewTask, dispatch),\n  finishTask: bindActionCreators(finishTask, dispatch),\n  deleteTask: bindActionCreators(deleteTask, dispatch),\n  changeTabActive: bindActionCreators(changeTabActive, dispatch),\n  modalControler: bindActionCreators(modalControler, dispatch),\n  tasksGenerator: bindActionCreators(tasksGenerator, dispatch),\n});\n\n\nexport default connect(mapStateToProps, mapDispathToProps)(Timer);\n","\nimport {\n  TIMER_BTN_CHANGE_VALUE,\n  VERIFICATION_CAN_ADD_TASK,\n  CHANGE_ERROR_STATUS,\n  VARIFICATION_INPUT,\n  ADD_TASK,\n  FINISH_TASK,\n  DELETE_TASK,\n  TAB_CHANGE_ACTIVE,\n  MODAL_CONTROLER,\n  GENERETE_TASKS,\n} from './actions';\n\nconst startLastTaskLocal = JSON.parse(localStorage.getItem('startLastTask'));\nconst timerBtnValueLocal = localStorage.getItem('timerStatus');\nconst tasksLocal = JSON.parse(localStorage.getItem('tasks'));\n\n\nconst initialState = {\n  timerBtnValue: (timerBtnValueLocal !== null ? timerBtnValueLocal : 'start'),\n  canAddTask: false,\n  error: false,\n  tasks: (tasksLocal !== null ? tasksLocal : []),\n  tabValue: 0,\n  chartData: [],\n  startLastTask: (startLastTaskLocal === null ? 0 : startLastTaskLocal),\n  modalIsOpen: false,\n};\n\n\nconst rootReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case TIMER_BTN_CHANGE_VALUE:\n      return { ...state, timerBtnValue: action.payload };\n    case VERIFICATION_CAN_ADD_TASK:\n      return { ...state, canAddTask: action.payload };\n    case CHANGE_ERROR_STATUS:\n      return { ...state, error: action.payload };\n    case VARIFICATION_INPUT:\n      return {\n        ...state,\n        error: action.error,\n        canAddTask: action.canAddTask,\n      };\n    case ADD_TASK:\n      return {\n        ...state,\n        tasks: [...state.tasks, {\n          id: action.payload.start,\n          start: action.payload.start,\n          end: 0,\n          spend: 0,\n          isCompleted: action.payload.isCompleted,\n          hour: action.payload.hour,\n        }],\n        startLastTask: action.payload.start,\n      };\n    case FINISH_TASK:\n      return {\n        ...state,\n        tasks: state.tasks.map((task, index) => {\n          if (index === state.tasks.length - 1) {\n            task.name = action.payload.name;\n            task.end = action.payload.end;\n            task.spend = action.payload.end - task.start;\n            task.isCompleted = action.payload.isCompleted;\n            return task;\n          }\n          return task;\n        }),\n      };\n    case DELETE_TASK:\n      return {\n        ...state, tasks: state.tasks.filter((task) => task.id !== action.id),\n      };\n    case TAB_CHANGE_ACTIVE:\n      return {\n        ...state, tabValue: action.value,\n      };\n    case MODAL_CONTROLER:\n      return {\n        ...state, modalIsOpen: action.modalIsOpen,\n      };\n    case GENERETE_TASKS:\n      return {\n        ...state, tasks: action.newTasks,\n      };\n    default: return state;\n  }\n};\n\nexport default rootReducer;\n","import React from 'react';\nimport './App.css';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport { createStore } from 'redux';\nimport Timer from './components/timer/timer';\nimport rootReducer from './store/reducer';\n\nexport const store = createStore(\n  rootReducer,\n  // eslint-disable-next-line no-underscore-dangle\n  window.__REDUX_DEVTOOLS_EXTENSION__\n  // eslint-disable-next-line no-underscore-dangle\n  && window.__REDUX_DEVTOOLS_EXTENSION__(),\n);\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <BrowserRouter>\n        <Timer />\n      </BrowserRouter>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost'\n  // [::1] is the IPv6 localhost address.\n  || window.location.hostname === '[::1]'\n  // 127.0.0.0/8 are considered localhost for IPv4.\n  || window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n  ),\n);\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      const rgstr = registration;\n      rgstr.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all '\n                + 'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404\n        || (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service '\n            + 'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}