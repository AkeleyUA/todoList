{"version":3,"sources":["components/tabMainCharts.jsx","components/modal.jsx","components/tabMainLog.jsx","pages/home.jsx","pages/error.jsx","pages/taskInfo.jsx","actions/actions.js","components/timer.jsx","redusers/modal.js","redusers/tabs.js","redusers/tasks.js","redusers/timer.js","redusers/canAddTask.js","redusers/error.js","redusers/index.js","App.jsx","serviceWorker.js","index.js"],"names":["MyModal","props","closeModal","modalIsOpen","Modal","aria-labelledby","aria-describedby","open","onClose","style","position","top","left","width","height","background","grey","border","padding","id","color","red","Button","cyan","bottom","right","onClick","TabMainLog","tasks","timeToString","deleteTask","className","Table","TableHead","TableRow","TableCell","variant","TableBody","blue","map","task","index","isCompleted","key","name","Date","start","toLocaleTimeString","end","spend","borderRadius","type","component","NavLink","to","random","min","max","Math","round","newTasksArray","randomStart","getTime","i","randomSpend","randomEnd","hour","getHours","tabMainCharts","data","tasksGenerator","margin","strokeDasharray","dataKey","domain","fill","HomePage","error","tabValue","timerBtnValue","inputRef","addInterval","removeInterval","tabMainLog","tabMainChart","timer","inputErrorControler","Grid","container","direction","justify","alignItems","maxWidth","Container","Input","display","inputProps","ref","textAlign","fullWidth","placeholder","onChange","Box","fontWeight","fontSize","boxShadow","Tabs","value","Tab","label","exact","path","ErrorIdTask","paramsId","Alert","severity","size","TaskInfo","timerBtnChangeValue","newToggle","payload","changeErrorStatus","status","varificationInput","startedTaskCreation","finishedTaskCreation","changeTabActive","modalControler","Timer","onUnload","localStorage","removeItem","setItem","JSON","stringify","dataForTheTask","interval","setInterval","setState","state","canAddTask","current","clearInterval","focus","chartsArray","push","duration","chart","minutesLeft","getMinutes","spendToMinuts","floor","excessMinutes","nextIndex","taskInfo","mustReturn","match","params","length","homePage","counter","hours","minuts","seconds","React","createRef","this","getItem","window","addEventListener","removeEventListener","Component","connect","dispatch","bindActionCreators","action","tasksLocal","parse","initialState","tasksList","filter","timerBtnValueLocal","combineReducers","store","createStore","reduser","__REDUX_DEVTOOLS_EXTENSION__","App","Boolean","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.3ecbc1b0.chunk.js","sourcesContent":["import React from 'react';\nimport { Button } from '@material-ui/core';\nimport { blue } from '@material-ui/core/colors';\nimport {\n  BarChart,\n  Bar,\n  XAxis,\n  YAxis,\n  Legend,\n  CartesianGrid,\n  ResponsiveContainer,\n} from 'recharts';\n\nconst random = (min, max) => Math.round(Math.random() * (max - min) + min);\nlet newTasksArray = [];\nlet randomStart = new Date().getTime() - 43200000;\nfor (let i = 0; i < random(10, 15); i++) {\n  const randomSpend = random(600000, 5400000);\n  const randomEnd = randomStart + randomSpend;\n  newTasksArray = [...newTasksArray, {\n    id: randomStart,\n    start: randomStart,\n    end: randomEnd,\n    spend: randomSpend,\n    isCompleted: true,\n    hour: new Date(randomStart).getHours(),\n    name: `random task №${i + 1}`,\n  }];\n  randomStart = randomEnd + random(0, 600000);\n}\n\nconst tabMainCharts = (props) => {\n  const { data, tasksGenerator } = props;\n  return (\n    <>\n      <ResponsiveContainer height={430}>\n        <BarChart\n          data={data}\n          margin={{\n            top: 50,\n            right: 20,\n            bottom: 50,\n            left: 20,\n          }}\n        >\n          <CartesianGrid strokeDasharray=\"3 3\" />\n          <XAxis dataKey=\"hour\" domain={[0, 24]} />\n          <YAxis domain={[0, 60]} />\n          <Legend />\n          <Bar name=\"Minuts in this hours\" dataKey=\"duration\" fill={blue[900]} width={30} />\n        </BarChart>\n      </ResponsiveContainer>\n      <Button style={{ position: 'fixed', bottom: 50, right: 50 }} variant=\"contained\" onClick={() => tasksGenerator(newTasksArray)}>generate</Button>\n    </>\n  );\n};\n\nexport default tabMainCharts;\n","import React from 'react';\nimport { Modal, Button } from '@material-ui/core';\nimport { cyan, grey, red } from '@material-ui/core/colors';\n\nconst MyModal = (props) => {\n  const { closeModal, modalIsOpen } = props;\n  return (\n    <Modal\n      aria-labelledby=\"simple-modal-title\"\n      aria-describedby=\"simple-modal-description\"\n      open={modalIsOpen}\n      onClose={closeModal}\n    >\n      <div style={{\n        position: 'absolute',\n        top: '30%',\n        left: '30%',\n        width: 600,\n        height: 100,\n        background: grey[50],\n        border: '2px solid #000',\n        padding: 20,\n      }}\n      >\n        <h2 id=\"simple-modal-title\" style={{ color: red[500] }}>Empty task name</h2>\n        <p id=\"simple-modal-description\">\n          Your are tring close your task without name, enter the title and try again!\n        </p>\n        <Button\n          style={{\n            color: cyan[500],\n            position: 'absolute',\n            bottom: 15,\n            right: 15,\n          }}\n          onClick={closeModal}\n        >\n          Close\n        </Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default MyModal;\n","import React from 'react';\nimport { grey, blue } from '@material-ui/core/colors';\nimport { NavLink } from 'react-router-dom';\nimport {\n  Button,\n  Table,\n  TableHead,\n  TableBody,\n  TableRow,\n  TableCell,\n} from '@material-ui/core';\n\nconst TabMainLog = (props) => {\n  const { tasks, timeToString, deleteTask } = props;\n  return (\n    <div className=\"tabs-main\">\n      <Table className=\"tasks-log\">\n        <TableHead>\n          <TableRow>\n            <TableCell variant=\"body\">№</TableCell>\n            <TableCell variant=\"body\">Task</TableCell>\n            <TableCell variant=\"body\">Time start</TableCell>\n            <TableCell variant=\"body\">Time end</TableCell>\n            <TableCell variant=\"body\">Time spend</TableCell>\n            <TableCell variant=\"body\">Info</TableCell>\n            <TableCell variant=\"body\">Delete</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody style={{ color: blue[900] }}>\n          {tasks.map((task, index) => {\n            if (task.isCompleted) {\n              return (\n                <TableRow id={task.id} key={task.id} style={{ background: blue[100] }}>\n                  <TableCell variant=\"head\"><div>{index + 1}</div></TableCell>\n                  <TableCell variant=\"head\"><div>{task.name}</div></TableCell>\n                  <TableCell variant=\"head\">\n                    <div>\n                      {new Date(task.start).toLocaleTimeString()}\n                    </div>\n                  </TableCell>\n                  <TableCell variant=\"head\">\n                    <div>\n                      {new Date(task.end).toLocaleTimeString()}\n                    </div>\n                  </TableCell>\n                  <TableCell variant=\"head\"><div>{timeToString(task.spend)}</div></TableCell>\n                  <TableCell variant=\"head\">\n                    <Button\n                      style={{\n                        background: grey[50],\n                        borderRadius: 0,\n                      }}\n                      type=\"button\"\n                      color=\"primary\"\n                      component={NavLink}\n                      to={`task/${task.id}`}\n                    >\n                      Info\n                    </Button>\n                  </TableCell>\n                  <TableCell variant=\"head\">\n                    <Button\n                      style={{ background: grey[50], borderRadius: 0 }}\n                      type=\"button\"\n                      onClick={() => {\n                        deleteTask(task.id);\n                      }}\n                      color=\"primary\"\n                    >\n                      Delete\n                    </Button>\n                  </TableCell>\n                </TableRow>\n              );\n            }\n            return null;\n          })}\n        </TableBody>\n      </Table>\n    </div>\n  );\n};\n\nexport default TabMainLog;\n","import React from 'react';\nimport { Button, Grid, Input, Container, Box, Tabs, Tab } from '@material-ui/core';\nimport { cyan, grey, blue, red } from '@material-ui/core/colors';\nimport { Route, NavLink } from 'react-router-dom';\n\nconst HomePage = (props) => {\n  const {\n    error,\n    tabValue,\n    timerBtnValue,\n    inputRef,\n    timeToString,\n    addInterval,\n    removeInterval,\n    tabMainLog,\n    tabMainChart,\n    timer,\n    inputErrorControler,\n  } = props;\n\n  return (\n    <div style={{ height: 1000 }}>\n      <Grid\n          container\n          direction=\"column\"\n          justify=\"center\"\n          alignItems=\"center\"\n          style={{\n            maxWidth: 1440,\n            margin: '0 auto',\n          }}\n        >\n          <Container maxWidth={false} className=\"task-init\">\n            <Input\n              id=\"standard-basic\"\n              style={{\n                width: \"300px\",\n                margin: \"0 auto\",\n                display: \"flex\",\n              }}\n              error={error}\n              inputProps={{\n                ref: inputRef,\n                className: \"input-task-name\",\n                style: {\n                  color:(error ? red[500] : blue[900]),\n                  textAlign: 'center',\n                },\n              }}\n              fullWidth={true}\n              placeholder=\"Name of your task\"\n              onChange={inputErrorControler}\n            />\n            <Box className=\"circle\" color=\"primary.main\" fontWeight=\"500\" fontSize={20}>\n              <p className=\"time\">{timeToString(timer)}</p>\n            </Box>\n            <Button\n              variant=\"text\"\n              color=\"primary\"\n              type=\"button\"\n              onClick={timerBtnValue === 'start' ? addInterval : removeInterval}\n              style={{\n                margin: '0 auto 30px auto',\n                display: 'flex',\n                boxShadow: '0 0 3px rgba(0, 0, 0, 0.3)',\n              }}\n            >\n              {timerBtnValue}\n            </Button>\n          </Container>\n          <Tabs style={{ width: '100%', background: cyan[700] }} variant=\"fullWidth\" value={tabValue}>\n            <Tab style={{ color: grey[50] }} label={`Tasks log`} component={NavLink} to=\"/todoList/\" />\n            <Tab style={{ color: grey[50] }} label={`Tasks chart`} component={NavLink} to=\"/todoList/tasks-chart\" />\n          </Tabs>\n          <Route exact path=\"/todoList/\" component={tabMainLog} />\n          <Route path=\"/todoList/tasks-chart\" component={tabMainChart} />\n        </Grid>\n      </div>\n  );\n};\n\nexport default HomePage;\n","import React from 'react';\nimport { Alert } from '@material-ui/lab';\nimport { Button } from '@material-ui/core';\nimport { NavLink } from 'react-router-dom';\nimport { grey } from '@material-ui/core/colors';\n\nconst ErrorIdTask = (props) => {\n  const { paramsId } = props;\n  return (\n    <>\n      <Alert severity=\"error\" style={{ margin: 30 }}>\n        A task with id:\n        {paramsId}\n        does not exist.\n      </Alert>\n      <div style={{\n        maxWidth: 1440,\n        margin: '0 auto',\n        textAlign: 'center',\n        padding: '30px 0',\n      }}\n      >\n        <Button\n          style={{\n            background: grey[50],\n            boxShadow: '0 0 3px rgba(0, 0, 0, 0.3)',\n          }}\n          size=\"large\"\n          type=\"button\"\n          color=\"primary\"\n          component={NavLink}\n          to=\"/todoList/\"\n        >\n          Home\n        </Button>\n      </div>\n    </>\n  );\n};\n\nexport default ErrorIdTask;\n","import React from 'react';\nimport { grey, blue } from '@material-ui/core/colors';\nimport { NavLink } from 'react-router-dom';\nimport {\n  Button,\n  Table,\n  TableHead,\n  TableBody,\n  TableRow,\n  TableCell,\n} from '@material-ui/core';\n\nconst TaskInfo = (props) => {\n  const { deleteTask, task, timeToString } = props;\n  return (\n    <>\n      <Table\n        className=\"tasks-log\"\n        style={{\n          maxWidth: 1440,\n          margin: '0 auto',\n        }}\n      >\n        <TableHead>\n          <TableRow>\n            <TableCell variant=\"body\">ID</TableCell>\n            <TableCell variant=\"body\">Task</TableCell>\n            <TableCell variant=\"body\">Time start</TableCell>\n            <TableCell variant=\"body\">Time end</TableCell>\n            <TableCell variant=\"body\">Time spend</TableCell>\n            <TableCell variant=\"body\">Delete</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody style={{ color: blue[900] }}>\n          <TableRow id={task.id} style={{ background: blue[100] }}>\n            <TableCell variant=\"head\"><div>{task.id}</div></TableCell>\n            <TableCell variant=\"head\"><div>{task.name}</div></TableCell>\n            <TableCell variant=\"head\">\n              <div>\n                {new Date(task.start).toLocaleTimeString()}\n              </div>\n            </TableCell>\n            <TableCell variant=\"head\">\n              <div>\n                {new Date(task.end).toLocaleTimeString()}\n              </div>\n            </TableCell>\n            <TableCell variant=\"head\"><div>{timeToString(task.spend)}</div></TableCell>\n            <TableCell variant=\"head\">\n              <Button\n                style={{ background: grey[50], borderRadius: 0 }}\n                type=\"button\"\n                component={NavLink}\n                onClick={() => {\n                  deleteTask(task.id);\n                }}\n                to=\"/\"\n                color=\"primary\"\n              >\n                Delete\n              </Button>\n            </TableCell>\n          </TableRow>\n        </TableBody>\n      </Table>\n      <div\n        style={{\n          width: '100%',\n          textAlign: 'center',\n          padding: '30px 0',\n        }}\n      >\n        <Button\n          style={{\n            background: grey[50],\n            boxShadow: '0 0 3px rgba(0, 0, 0, 0.3)',\n          }}\n          size=\"large\"\n          type=\"button\"\n          color=\"primary\"\n          component={NavLink}\n          to=\"/todoList/\"\n        >\n          Home\n        </Button>\n      </div>\n    </>\n  );\n};\n\nexport default TaskInfo;\n","export const TIMER_BTN_CHANGE_VALUE = 'TIMER_BTN_CHANGE_VALUE';\nexport const VERIFICATION_CAN_ADD_TASK = 'VERIFICATION_CAN_ADD_TASK';\nexport const CHANGE_ERROR_STATUS = 'CHANGE_ERROR_STATUS';\nexport const VERIFICATION_INPUT = 'VERIFICATION_INPUT';\nexport const STARTED_TASK_CREATION = 'STARTED_TASK_CREATION';\nexport const FINISHED_TASK_CREATION = 'FINISHED_TASK_CREATION';\nexport const DELETE_TASK = 'DELETE_TASK';\nexport const TAB_CHANGE_ACTIVE = 'TAB_CHANGE_ACTIVE';\nexport const MODAL_CONTROLER = 'MODAL_CONTROLER';\nexport const GENERETE_TASKS = 'GENERETE_TASKS';\n\nexport const timerBtnChangeValue = (newToggle) => ({\n  type: TIMER_BTN_CHANGE_VALUE,\n  payload: newToggle,\n});\n\nexport const changeErrorStatus = (status) => ({\n  type: CHANGE_ERROR_STATUS,\n  payload: status,\n});\n\nexport const varificationInput = (status) => ({\n  type: VERIFICATION_INPUT,\n  payload: status,\n});\n\nexport const startedTaskCreation = (task) => ({\n  type: STARTED_TASK_CREATION,\n  payload: task,\n});\n\nexport const finishedTaskCreation = (task) => ({\n  type: FINISHED_TASK_CREATION,\n  payload: task,\n});\n\nexport const deleteTask = (id) => ({\n  type: DELETE_TASK,\n  payload: id,\n});\n\nexport const changeTabActive = (value) => ({\n  type: TAB_CHANGE_ACTIVE,\n  payload: value,\n});\n\n\nexport const modalControler = (status) => ({\n  type: MODAL_CONTROLER,\n  payload: status,\n});\n\nexport const tasksGenerator = (tasks) => ({\n  type: GENERETE_TASKS,\n  payload: tasks,\n});\n","import React from 'react';\nimport './timer.css';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { Route } from 'react-router-dom';\n\nimport MyModal from './modal';\nimport TabMainLog from './tabMainLog';\nimport TabMainCharts from './tabMainCharts';\nimport HomePage from '../pages/home';\nimport ErrorIdTask from '../pages/error';\nimport TaskInfo from '../pages/taskInfo';\nimport {\n  timerBtnChangeValue,\n  changeErrorStatus,\n  varificationInput,\n  startedTaskCreation,\n  finishedTaskCreation,\n  deleteTask,\n  changeTabActive,\n  modalControler,\n  tasksGenerator,\n} from '../actions/actions';\n\nclass Timer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      timer: 0,\n      interval: null,\n    };\n    this.inputRef = React.createRef();\n  }\n\n  componentDidMount() {\n    const { timerBtnValue } = this.props;\n    const start = localStorage.getItem('startLastTask');\n    if (timerBtnValue === 'stop') {\n      const interval = setInterval(() => (this.setState({ timer: new Date().getTime() - start })), 1000);\n      this.setState({ interval });\n    }\n    window.addEventListener('unload', this.onUnload);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('unload', this.onUnload);\n  }\n\n  onUnload = () => {\n    const { tasks } = this.props;\n    localStorage.removeItem('tasks');\n    localStorage.setItem('tasks', JSON.stringify(tasks));\n  }\n\n  addInterval = () => {\n    const { timerBtnChangeValue, startedTaskCreation } = this.props;\n    const dataForTheTask = { start: new Date().getTime(), hour: new Date().getHours(), isCompleted: false };\n    const interval = setInterval(() => (\n      this.setState({ timer: new Date().getTime() - dataForTheTask.start })\n    ), 1000);\n\n    startedTaskCreation(dataForTheTask);\n    timerBtnChangeValue('stop');\n\n    localStorage.setItem('startLastTask', dataForTheTask.start);\n    localStorage.setItem('timerStatus', 'stop');\n\n    this.setState({ interval });\n  }\n\n  removeInterval = () => {\n    const { interval } = this.state;\n    const {\n      canAddTask,\n      varificationInput,\n      changeErrorStatus,\n      timerBtnChangeValue,\n      finishedTaskCreation,\n      modalControler,\n    } = this.props;\n    const dataForTheTask = {\n      end: new Date().getTime(),\n      name: this.inputRef.current.value,\n      isCompleted: true,\n    };\n\n    if (canAddTask) {\n      clearInterval(interval);\n      timerBtnChangeValue('start');\n      finishedTaskCreation(dataForTheTask);\n      changeErrorStatus(false);\n      varificationInput(false);\n\n      localStorage.removeItem('startLastTask');\n      localStorage.removeItem('timerStatus');\n\n      this.inputRef.current.value = '';\n\n      this.setState({ timer: 0 });\n    } else {\n      modalControler(true);\n      changeErrorStatus(true);\n      varificationInput(false);\n\n      this.inputRef.current.focus();\n    }\n  }\n\n  tabMainLog = () => {\n    const {\n      deleteTask,\n      changeTabActive,\n      tasks,\n      tabValue,\n    } = this.props;\n\n    if (tabValue === 1) {\n      changeTabActive(0);\n    }\n\n    return (\n      <TabMainLog deleteTask={deleteTask} tasks={tasks} timeToString={this.timeToString} />\n    );\n  }\n\n  tabMainChart = () => {\n    const {\n      changeTabActive,\n      tasks,\n      tabValue,\n      tasksGenerator\n    } = this.props;\n    const chartsArray = [];\n\n    if (tabValue === 0) {\n      changeTabActive(1);\n    }\n\n    for (let i = 0; i < 24; i++) {\n      chartsArray.push({ hour: i, duration: 0 });\n    }\n\n    chartsArray.map((chart, index) => {\n      tasks.map((task) => {\n        const minutesLeft = 60 - new Date(task.start).getMinutes();\n        if (chart.hour === task.hour) {\n          const spendToMinuts = (task.spend / 1000 / 60);\n          if (spendToMinuts <= minutesLeft) {\n            chart.duration += Math.floor(spendToMinuts);\n          } else if (spendToMinuts > minutesLeft) {\n            chart.duration += Math.floor(minutesLeft);\n            const excessMinutes = spendToMinuts - minutesLeft;\n            if (index < 23) {\n              for (let i = 1; i < Math.floor(excessMinutes / 60) + 1; i++) {\n                const nextIndex = index + i;\n                chartsArray[(nextIndex > 23 ? nextIndex - 24 : nextIndex)].duration = 60;\n              }\n              chartsArray[\n                (index + 1 + Math.floor(excessMinutes / 60) > 23\n                  ? index + 1 + Math.floor(excessMinutes / 60) - 24\n                  : index + 1 + Math.floor(excessMinutes / 60)\n                )].duration = Math.floor(excessMinutes % 60);\n            }\n          }\n        }\n        return task;\n      });\n      return chart;\n    });\n\n    return (\n      <TabMainCharts data={chartsArray} tasksGenerator={tasksGenerator} />\n    );\n  }\n\n  closeModal = () => {\n    const { modalControler } = this.props;\n\n    modalControler(false);\n  }\n\n  inputErrorControler = () => {\n    const { varificationInput, changeErrorStatus } = this.props;\n    if (this.inputRef.current.value < 1) {\n      varificationInput(false);\n      changeErrorStatus(true);\n    } else {\n      varificationInput(true);\n      changeErrorStatus(false);\n    }\n  }\n\n  taskInfo = (props) => {\n    const { deleteTask, tasks } = this.props;\n    let mustReturn = <ErrorIdTask paramsId={props.match.params.id} />;\n\n    if (tasks.length > 0) {\n      tasks.map((task) => {\n        if (+props.match.params.id === task.id) {\n          mustReturn = () => (\n            <TaskInfo deleteTask={deleteTask} task={task} timeToString={this.timeToString} />\n          );\n        }\n        return task;\n      });\n    }\n\n    return mustReturn;\n  }\n\n  homePage = () => {\n    const {\n      error,\n      timerBtnValue,\n      varificationInput,\n      tabValue,\n      modalIsOpen,\n    } = this.props;\n    const { timer } = this.state;\n    return (\n      <>\n        <MyModal\n          modalIsOpen={modalIsOpen}\n          closeModal={this.closeModal}\n          timeToString={this.timeToString}\n        />\n        <HomePage\n          inputErrorControler={this.inputErrorControler}\n          error={error}\n          timer={timer}\n          varificationInput={varificationInput}\n          tabValue={tabValue}\n          timerBtnValue={timerBtnValue}\n          inputRef={this.inputRef}\n          timeToString={this.timeToString}\n          addInterval={this.addInterval}\n          removeInterval={this.removeInterval}\n          tabMainLog={this.tabMainLog}\n          tabMainChart={this.tabMainChart}\n        />\n      </>\n    );\n  }\n\n  timeToString = (counter) => {\n    const hours = Math.floor((counter / 1000 / 60 / 60) % 60);\n    const minuts = Math.floor((counter / 1000 / 60) % 60);\n    const seconds = Math.floor((counter / 1000) % 60);\n    return (\n      `${(hours < 10 ? `0${hours}` : hours)}:\n      ${(minuts < 10 ? `0${minuts}` : minuts)}:\n      ${(seconds < 10 ? `0${seconds}` : seconds)}`\n    );\n  }\n\n\n  render() {\n    return (\n      <>\n        <Route exact path=\"/todoList/\" component={(this.homePage)} />\n        <Route path=\"/todoList/task/:id\" component={this.taskInfo} />\n        <Route path=\"/todoList/tasks-chart\" component={this.homePage} />\n      </>\n    );\n  }\n}\n\n\nconst mapStateToProps = (state) => ({\n  timerBtnValue: state.timerBtnValue,\n  canAddTask: state.canAddTask,\n  error: state.error,\n  tasks: state.tasks,\n  tabValue: state.tabValue,\n  modalIsOpen: state.modalIsOpen,\n  isCompleted: state.isCompleted,\n});\n\nconst mapDispathToProps = (dispatch) => ({\n  timerBtnChangeValue: bindActionCreators(timerBtnChangeValue, dispatch),\n  changeErrorStatus: bindActionCreators(changeErrorStatus, dispatch),\n  varificationInput: bindActionCreators(varificationInput, dispatch),\n  startedTaskCreation: bindActionCreators(startedTaskCreation, dispatch),\n  finishedTaskCreation: bindActionCreators(finishedTaskCreation, dispatch),\n  deleteTask: bindActionCreators(deleteTask, dispatch),\n  changeTabActive: bindActionCreators(changeTabActive, dispatch),\n  modalControler: bindActionCreators(modalControler, dispatch),\n  tasksGenerator: bindActionCreators(tasksGenerator, dispatch),\n});\n\n\nexport default connect(mapStateToProps, mapDispathToProps)(Timer);\n","import { MODAL_CONTROLER } from '../actions/actions';\n\nconst initialState = false;\n\nconst modalIsOpen = (state = initialState, action) => {\n  switch (action.type) {\n    case MODAL_CONTROLER:\n      return action.payload;\n    default: return state;\n  }\n};\n\nexport default modalIsOpen;\n","import { TAB_CHANGE_ACTIVE } from '../actions/actions';\n\n\nconst initialState = 0;\n\nconst tabValue = (state = initialState, action) => {\n  switch (action.type) {\n    case TAB_CHANGE_ACTIVE:\n      return action.payload;\n    default: return state;\n  }\n};\n\nexport default tabValue;\n","import {\n  STARTED_TASK_CREATION,\n  FINISHED_TASK_CREATION,\n  DELETE_TASK,\n  GENERETE_TASKS,\n} from '../actions/actions';\n\nconst tasksLocal = JSON.parse(localStorage.getItem('tasks'));\nconst initialState = (tasksLocal !== null ? tasksLocal : []);\n\nconst tasksList = (state = initialState, action) => {\n  switch (action.type) {\n    case STARTED_TASK_CREATION:\n      return [\n        ...state, {\n          id: action.payload.start,\n          start: action.payload.start,\n          end: 0,\n          spend: 0,\n          isCompleted: action.payload.isCompleted,\n          hour: action.payload.hour,\n        },\n      ];\n    case FINISHED_TASK_CREATION:\n      return state.map((task, index) => {\n        if (index === state.length - 1) {\n          task.name = action.payload.name;\n          task.end = action.payload.end;\n          task.spend = action.payload.end - task.start;\n          task.isCompleted = action.payload.isCompleted;\n          return task;\n        }\n        return task;\n      });\n    case DELETE_TASK:\n      return state.filter((task) => task.id !== action.payload);\n    case GENERETE_TASKS:\n      return action.payload;\n    default: return state;\n  }\n};\n\nexport default tasksList;\n","import { TIMER_BTN_CHANGE_VALUE } from '../actions/actions';\n\nconst timerBtnValueLocal = localStorage.getItem('timerStatus');\nconst initialState = (timerBtnValueLocal !== null ? timerBtnValueLocal : 'start');\n\nconst timerBtnValue = (state = initialState, action) => {\n  switch (action.type) {\n    case TIMER_BTN_CHANGE_VALUE:\n      return action.payload;\n    default: return state;\n  }\n};\n\nexport default timerBtnValue;\n","import { VERIFICATION_INPUT } from '../actions/actions';\n\nconst initialState = false;\n\nconst canAddTask = (state = initialState, action) => {\n  switch (action.type) {\n    case VERIFICATION_INPUT:\n      return action.payload;\n    default: return state;\n  }\n};\n\nexport default canAddTask;\n","import { CHANGE_ERROR_STATUS } from '../actions/actions';\n\nconst initialState = false;\n\nconst error = (state = initialState, action) => {\n  switch (action.type) {\n    case CHANGE_ERROR_STATUS:\n      return action.payload;\n    default: return state;\n  }\n};\n\nexport default error;\n","import { combineReducers } from 'redux';\nimport modalIsOpen from './modal';\nimport tabValue from './tabs';\nimport tasks from './tasks';\nimport timerBtnValue from './timer';\nimport canAddTask from './canAddTask';\nimport error from './error';\n\nexport default combineReducers({\n  modalIsOpen,\n  tabValue,\n  tasks,\n  timerBtnValue,\n  canAddTask,\n  error,\n});\n","import React from 'react';\nimport './App.css';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport { createStore } from 'redux';\nimport Timer from './components/timer';\nimport reduser from './redusers/index';\n\nexport const store = createStore(\n  reduser,\n  // eslint-disable-next-line no-underscore-dangle\n  window.__REDUX_DEVTOOLS_EXTENSION__\n  // eslint-disable-next-line no-underscore-dangle\n  && window.__REDUX_DEVTOOLS_EXTENSION__(),\n);\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <BrowserRouter>\n        <Timer />\n      </BrowserRouter>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost'\n  // [::1] is the IPv6 localhost address.\n  || window.location.hostname === '[::1]'\n  // 127.0.0.0/8 are considered localhost for IPv4.\n  || window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n  ),\n);\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      const rgstr = registration;\n      rgstr.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all '\n                + 'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404\n        || (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service '\n            + 'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}