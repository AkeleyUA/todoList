{"version":3,"sources":["store/actions.js","store/reducer.js","components/modal/modal.js","components/tabs/tabMain.js","components/home/home.js","components/errors/error.js","components/info/taskInfo.js","components/timer/timer.js","App.jsx","serviceWorker.js","index.js"],"names":["changeRunTime","newToggle","type","payload","removeCounter","verificationCanAddTask","status","changeErrorStatus","varificationInput","event","target","value","error","canAddTask","tick","start","addNewTask","task","id","hour","finishTask","isCompleted","name","end","spend","deleteTask","changeTabActive","modalControler","modalIsOpen","tasksGenerator","random","min","max","Math","round","newTasksArray","randomStart","Date","getTime","i","randomSpend","randomEnd","getHours","newTasks","checkLocal","JSON","parse","localStorage","getItem","initialState","timeRunning","counter","tasks","tabValue","chartData","startLastTask","createStore","state","action","setItem","stringify","filter","index","length","newTask","window","__REDUX_DEVTOOLS_EXTENSION__","MyModal","props","closeModal","Modal","aria-labelledby","aria-describedby","open","onClose","style","position","top","left","width","height","background","grey","border","padding","color","red","Button","cyan","bottom","right","onClick","TabMain","timeToString","className","Table","TableHead","TableRow","TableCell","variant","TableBody","blue","map","key","toLocaleTimeString","borderRadius","component","NavLink","to","HomePage","inputRef","addInterval","removeInterval","tabMainLog","tabMainChart","Grid","container","direction","justify","alignItems","maxWidth","margin","Container","Input","display","inputProps","ref","textAlign","fullWidth","placeholder","onChange","Box","fontWeight","fontSize","boxShadow","Tabs","Tab","label","exact","path","ErrorIdTask","paramsId","Alert","severity","size","TaskInfo","Timer","timer","setInterval","setState","clearInterval","current","focus","chartsArray","push","duration","chart","minutesLeft","getMinutes","spendToMinuts","data","strokeDasharray","dataKey","domain","fill","taskInfo","mustReturn","match","params","homePage","hours","floor","minuts","seconds","React","createRef","this","Component","connect","dispatch","bindActionCreators","App","store","Boolean","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.52ee2bb8.chunk.js","sourcesContent":["import { bindActionCreators } from 'redux';\n\nexport const CHANGE_RUN_TIME = 'CHANGE_RUN_TIME';\nexport const REMOVE_COUNTER = 'REMOVE_COUNTER';\nexport const VARIFICATION_CAN_ADD_TASK = 'VARIFICATION_CAN_ADD_TASK';\nexport const CHANGE_ERROR_STATUS = 'CHANGE_ERROR_STATUS';\nexport const VARIFICATION_INPUT = 'VARIFICATION_INPUT';\nexport const TICK = 'TICK';\nexport const ADD_TASK = 'ADD_TASK';\nexport const FINISH_TASK = 'FINISH_TASK';\nexport const DELETE_TASK = 'DELETE_TASK';\nexport const TAB_CHANGE_ACTIVE = 'TAB_CHANGE_ACTIVE';\nexport const MODAL_CONTROLER = 'MODAL_CONTROLER';\nexport const GENERETE_TASKS = 'GENERETE_TASKS';\n// import store from '../../App'\n\n\nexport const changeRunTime = (newToggle) => ({\n  // localStorage.setItem(store.getState().timeRunning, JSON.stringify(newToggle));\n  type: CHANGE_RUN_TIME,\n  payload: newToggle,\n});\n\nexport const removeCounter = () => ({\n  type: REMOVE_COUNTER,\n  payload: 0,\n});\n\nexport const verificationCanAddTask = (status) => ({\n  type: VARIFICATION_CAN_ADD_TASK,\n  payload: status,\n});\n\nexport const changeErrorStatus = (status) => ({\n  type: CHANGE_ERROR_STATUS,\n  payload: status,\n});\n\nexport const varificationInput = (event) => {\n  let mustReturn = {};\n  if (event.target.value !== '' && event.target.value !== ' ') {\n    mustReturn = {\n      type: VARIFICATION_INPUT,\n      error: false,\n      canAddTask: true,\n    };\n  } else {\n    mustReturn = {\n      type: VARIFICATION_INPUT,\n      error: true,\n      canAddTask: false,\n    };\n  }\n  return mustReturn;\n};\n\nexport const tick = (start) => ({\n  type: TICK,\n  start,\n});\n\nexport const addNewTask = (task) => ({\n  type: ADD_TASK,\n  start: task.start,\n  id: task.start,\n  hour: task.hour,\n});\n\nexport const finishTask = (task) => ({\n  type: FINISH_TASK,\n  isCompleted: task.isCompleted,\n  name: task.name,\n  end: task.end,\n  spend: task.spend,\n});\n\nexport const deleteTask = (id) => ({\n  type: DELETE_TASK,\n  id,\n});\n\nexport const changeTabActive = (value) => ({\n  type: TAB_CHANGE_ACTIVE,\n  value,\n});\n\n\nexport const modalControler = (status) => ({\n  type: MODAL_CONTROLER,\n  modalIsOpen: status,\n});\n\nexport const tasksGenerator = () => {\n  const random = (min, max) => Math.round(Math.random() * (max - min) + min);\n  let newTasksArray = [];\n  let randomStart = new Date().getTime();\n  for (let i = 0; i < random(10, 15); i++) {\n    const randomSpend = random(600000, 5400000);\n    const randomEnd = randomStart + randomSpend;\n    newTasksArray = [...newTasksArray, {\n      id: randomStart,\n      start: randomStart,\n      end: randomEnd,\n      spend: randomSpend,\n      isCompleted: true,\n      hour: new Date(randomStart).getHours(),\n      name: `random task №${i + 1}`,\n    }];\n    randomStart = randomEnd + random(0, 600000);\n  }\n  return {\n    type: GENERETE_TASKS,\n    newTasks: newTasksArray,\n  };\n};\n\n\nexport const mapStateToProps = (state) => ({\n  timeRunning: state.timeRunning,\n  counter: state.counter,\n  canAddTask: state.canAddTask,\n  error: state.error,\n  tasks: state.tasks,\n  tabValue: state.tabValue,\n  modalIsOpen: state.modalIsOpen,\n  isCompleted: state.isCompleted,\n  startLastTask: state.startLastTask,\n});\n\nexport const mapDispathToProps = (dispatch) => ({\n  changeRunTime: bindActionCreators(changeRunTime, dispatch),\n  removeCounter: bindActionCreators(removeCounter, dispatch),\n  verificationCanAddTask: bindActionCreators(verificationCanAddTask, dispatch),\n  changeErrorStatus: bindActionCreators(changeErrorStatus, dispatch),\n  varificationInput: bindActionCreators(varificationInput, dispatch),\n  tick: bindActionCreators(tick, dispatch),\n  addNewTask: bindActionCreators(addNewTask, dispatch),\n  finishTask: bindActionCreators(finishTask, dispatch),\n  deleteTask: bindActionCreators(deleteTask, dispatch),\n  changeTabActive: bindActionCreators(changeTabActive, dispatch),\n  modalControler: bindActionCreators(modalControler, dispatch),\n  tasksGenerator: bindActionCreators(tasksGenerator, dispatch),\n});\n","import { createStore } from 'redux';\nimport {\n  CHANGE_RUN_TIME,\n  REMOVE_COUNTER,\n  VARIFICATION_CAN_ADD_TASK,\n  CHANGE_ERROR_STATUS,\n  VARIFICATION_INPUT,\n  TICK,\n  ADD_TASK,\n  FINISH_TASK,\n  DELETE_TASK,\n  TAB_CHANGE_ACTIVE,\n  MODAL_CONTROLER,\n  GENERETE_TASKS,\n} from './actions';\n\nconst checkLocal = JSON.parse(localStorage.getItem('state'));\n\nconst initialState = (\n  checkLocal !== null\n    ? checkLocal\n    : {\n      timeRunning: 'start',\n      counter: 0,\n      canAddTask: false,\n      error: false,\n      tasks: [],\n      tabValue: 0,\n      chartData: [],\n      startLastTask: 0,\n      modalIsOpen: false,\n    }\n);\n\n\nconst rootReducer = (state = initialState, action) => {\n  localStorage.setItem('state', JSON.stringify(state));\n  switch (action.type) {\n    case CHANGE_RUN_TIME:\n      return { ...state, timeRunning: action.payload };\n    case REMOVE_COUNTER:\n      return { ...state, counter: action.payload };\n    case VARIFICATION_CAN_ADD_TASK:\n      return { ...state, canAddTask: action.payload };\n    case CHANGE_ERROR_STATUS:\n      return { ...state, error: action.payload };\n    case VARIFICATION_INPUT:\n      return {\n        ...state,\n        error: action.error,\n        canAddTask: action.canAddTask,\n      };\n    case TICK:\n      return { ...state, counter: new Date().getTime() - action.start };\n    case ADD_TASK:\n      return {\n        ...state,\n        tasks: [...state.tasks, {\n          id: action.id,\n          start: action.start,\n          end: 0,\n          spend: 0,\n          isCompleted: action.isCompleted,\n          hour: action.hour,\n        }],\n        startLastTask: action.start,\n      };\n    case FINISH_TASK:\n      return {\n        ...state,\n        tasks: state.tasks.filter((task, index) => {\n          if (index === state.tasks.length - 1) {\n            const newTask = task;\n            newTask.name = action.name;\n            newTask.end = action.end;\n            newTask.spend = action.spend;\n            newTask.isCompleted = action.isCompleted;\n            return newTask;\n          }\n          return task;\n        }),\n      };\n    case DELETE_TASK:\n      return {\n        ...state, tasks: state.tasks.filter((task) => task.id !== action.id),\n      };\n    case TAB_CHANGE_ACTIVE:\n      return {\n        ...state, tabValue: action.value,\n      };\n    case MODAL_CONTROLER:\n      return {\n        ...state, modalIsOpen: action.modalIsOpen,\n      };\n    case GENERETE_TASKS:\n      return {\n        ...state, tasks: action.newTasks,\n      };\n    default: return state;\n  }\n};\n\nexport default createStore(\n  rootReducer,\n  // eslint-disable-next-line no-underscore-dangle\n  window.__REDUX_DEVTOOLS_EXTENSION__\n  // eslint-disable-next-line no-underscore-dangle\n  && window.__REDUX_DEVTOOLS_EXTENSION__(),\n);\n","import React from 'react';\r\nimport { Modal, Button } from '@material-ui/core';\r\nimport { cyan, grey,  red } from '@material-ui/core/colors';\r\n\r\n\r\nexport const MyModal = (props) => {\r\n  const { closeModal, modalIsOpen } = props;\r\n  return (\r\n    <Modal\r\n          aria-labelledby=\"simple-modal-title\"\r\n          aria-describedby=\"simple-modal-description\"\r\n          open={modalIsOpen}\r\n          onClose={closeModal}\r\n        >\r\n          <div style={{\r\n            position: \"absolute\",\r\n            top: `30%`,\r\n            left: '30%',\r\n            width: 600,\r\n            height: 100,\r\n            background: grey[50],\r\n            border: '2px solid #000',\r\n            padding: 20\r\n          }}>\r\n            <h2 id=\"simple-modal-title\" style={{color: red[500]}}>Empty task name</h2>\r\n            <p id=\"simple-modal-description\">\r\n              Your are tring close your task without name, enter the title and try again!\r\n            </p>\r\n            <Button \r\n              style={{\r\n                color: cyan[500],\r\n                position: 'absolute',\r\n                bottom: 15,\r\n                right: 15\r\n              }}\r\n              onClick={closeModal}\r\n            >Close</Button>\r\n          </div>\r\n        </Modal>\r\n  )\r\n}","import React from 'react'\r\nimport { Button, Table, TableHead, TableBody, TableRow, TableCell } from '@material-ui/core';\r\nimport { grey, blue } from '@material-ui/core/colors';\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nexport const TabMain = (props) => {\r\n  const { tasks, timeToString, deleteTask } = props;\r\n  return (\r\n    <div className=\"tabs-main\">\r\n    <Table className=\"tasks-log\">\r\n      <TableHead>\r\n        <TableRow>\r\n          <TableCell variant=\"body\">№</TableCell>\r\n          <TableCell variant=\"body\">Task</TableCell>\r\n          <TableCell variant=\"body\">Time start</TableCell>\r\n          <TableCell variant=\"body\">Time end</TableCell>\r\n          <TableCell variant=\"body\">Time spend</TableCell>\r\n          <TableCell variant=\"body\">Info</TableCell>\r\n          <TableCell variant=\"body\">Delete</TableCell>\r\n        </TableRow>\r\n      </TableHead>\r\n      <TableBody style={{ color: blue[900] }}>\r\n      {tasks.map((task, index) => {\r\n        if ( task.isCompleted ) {\r\n          return (\r\n            <TableRow id={task.id} key={index} style={{ background: blue[100] }}>\r\n              <TableCell variant=\"head\"><div>{index+1}</div></TableCell>\r\n              <TableCell variant=\"head\"><div>{task.name}</div></TableCell>\r\n              <TableCell variant=\"head\">\r\n                <div>\r\n                  {new Date(task.start).toLocaleTimeString()}\r\n                </div>\r\n              </TableCell>\r\n              <TableCell variant=\"head\">\r\n                <div>\r\n                  {new Date(task.end).toLocaleTimeString()}\r\n                </div>\r\n              </TableCell>\r\n              <TableCell variant=\"head\"><div>{timeToString(task.spend)}</div></TableCell>\r\n              <TableCell variant=\"head\">\r\n              <Button style={{ background: grey[50], borderRadius: 0 }} type=\"button\" color=\"primary\" component={NavLink} to={`task/${task.id}`}>Info</Button>\r\n              </TableCell>\r\n              <TableCell variant=\"head\">\r\n                <Button \r\n                  style={{ background: grey[50], borderRadius: 0 }}\r\n                  type=\"button\" \r\n                  onClick={() => {\r\n                    deleteTask(task.id);\r\n                  }} \r\n                  color=\"primary\">Delete</Button>\r\n              </TableCell>\r\n            </TableRow> \r\n            )\r\n          }\r\n        })}\r\n      </TableBody>\r\n    </Table>\r\n  </div>\r\n  )\r\n}","import React from 'react'\r\nimport { Button, Grid, Input, Container, Box, Tabs, Tab } from '@material-ui/core';\r\nimport { cyan, grey, blue, red } from '@material-ui/core/colors';\r\nimport { Route, NavLink } from 'react-router-dom';\r\n\r\nexport const HomePage = (props) => {\r\n  const {\r\n    error,\r\n    counter,\r\n    varificationInput,\r\n    tabValue,\r\n    timeRunning,\r\n    inputRef,\r\n    timeToString,\r\n    addInterval,\r\n    removeInterval,\r\n    tabMainLog,\r\n    tabMainChart\r\n  } = props;\r\n  return (\r\n    <div style={{height: 1000}}>\r\n      <Grid\r\n          container\r\n          direction=\"column\"\r\n          justify=\"center\"\r\n          alignItems=\"center\"\r\n          style={{\r\n            maxWidth: 1440,\r\n            margin: '0 auto',\r\n          }}\r\n        >\r\n          <Container maxWidth={false} className=\"task-init\">\r\n            <Input\r\n              id=\"standard-basic\"\r\n              style={{\r\n                width: \"300px\",\r\n                margin: \"0 auto\",\r\n                display: \"flex\",\r\n              }}\r\n              error={error}\r\n              inputProps={{\r\n                ref: inputRef,\r\n                className: \"input-task-name\",\r\n                style: {\r\n                  color:(error ? red[500] : blue[900]),\r\n                  textAlign: \"center\" \r\n                }\r\n              }}\r\n              fullWidth={true}\r\n              placeholder=\"Name of your task\"\r\n              onChange={varificationInput}\r\n            />\r\n            <Box className=\"circle\" color=\"primary.main\" fontWeight=\"500\" fontSize={20}>\r\n              <p className=\"time\">{timeToString(counter)}</p>\r\n            </Box>\r\n            <Button\r\n              variant=\"text\"\r\n              color=\"primary\"\r\n              type=\"button\"\r\n              onClick={timeRunning === 'start' ? addInterval : removeInterval}\r\n              style={{\r\n                margin: \"0 auto 30px auto\",\r\n                display: \"flex\",\r\n                boxShadow: '0 0 3px rgba(0, 0, 0, 0.3)'\r\n              }}\r\n            >\r\n              {timeRunning}\r\n            </Button>\r\n          </Container>\r\n          <Tabs style={{ width: '100%', background: cyan[700] }} variant=\"fullWidth\" value={tabValue}>\r\n            <Tab style={{ color: grey[50] }} label={`Tasks log`} component={NavLink} to=\"/todoList/\" />\r\n            <Tab style={{ color: grey[50] }} label={`Tasks chart`} component={NavLink} to=\"/todoList/tasks-chart\" />\r\n          </Tabs>\r\n          <Route exact path=\"/todoList/\" component={tabMainLog} />\r\n          <Route path=\"/todoList/tasks-chart\" component={tabMainChart} />\r\n        </Grid>\r\n      </div>\r\n  )\r\n}","import React from 'react'\r\nimport { Alert } from '@material-ui/lab';\r\nimport { Button } from '@material-ui/core';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { grey} from '@material-ui/core/colors';\r\n\r\nexport const ErrorIdTask = (props) => {\r\n  const { paramsId } = props;\r\n  return (\r\n    <>\r\n      <Alert severity=\"error\" style={{margin: 30}}>\r\n        A task with id:{paramsId} does not exist.\r\n      </Alert>\r\n      <div style={{maxWidth: 1440, margin: '0 auto', textAlign:\"center\", padding: \"30px 0\"}}>\r\n        <Button \r\n          style={{\r\n            background: grey[50],\r\n            boxShadow: '0 0 3px rgba(0, 0, 0, 0.3)',\r\n          }}\r\n          size=\"large\"\r\n          type=\"button\"\r\n          color=\"primary\"\r\n          component={NavLink}\r\n          to=\"/todoList/\"\r\n        >\r\n          Home\r\n        </Button>\r\n      </div>\r\n    </>\r\n  )\r\n}","import React from 'react'\r\nimport { Button, Table, TableHead, TableBody, TableRow, TableCell } from '@material-ui/core';\r\nimport { grey, blue } from '@material-ui/core/colors';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nexport const TaskInfo = (props) => {\r\n  const { deleteTask, task, timeToString} = props;\r\n  return (\r\n    <>\r\n      <Table className=\"tasks-log\" style={{maxWidth:1440, margin: '0 auto'}}>\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell variant=\"body\">ID</TableCell>\r\n            <TableCell variant=\"body\">Task</TableCell>\r\n            <TableCell variant=\"body\">Time start</TableCell>\r\n            <TableCell variant=\"body\">Time end</TableCell>\r\n            <TableCell variant=\"body\">Time spend</TableCell>\r\n            <TableCell variant=\"body\">Delete</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody style={{ color: blue[900] }}>\r\n          <TableRow id={task.id} style={{ background: blue[100] }}>\r\n            <TableCell variant=\"head\"><div>{task.id}</div></TableCell>\r\n            <TableCell variant=\"head\"><div>{task.name}</div></TableCell>\r\n            <TableCell variant=\"head\">\r\n              <div>\r\n                {new Date(task.start).toLocaleTimeString()}\r\n              </div>\r\n            </TableCell>\r\n            <TableCell variant=\"head\">\r\n              <div>\r\n                {new Date(task.end).toLocaleTimeString()}\r\n              </div>\r\n            </TableCell>\r\n            <TableCell variant=\"head\"><div>{timeToString(task.spend)}</div></TableCell>\r\n            <TableCell variant=\"head\">\r\n              <Button \r\n                style={{ background: grey[50], borderRadius: 0 }}\r\n                type=\"button\"\r\n                component={NavLink}\r\n                onClick={() => {\r\n                  deleteTask(task.id);\r\n                }}\r\n                to=\"/\"\r\n                color=\"primary\"\r\n              >\r\n                Delete\r\n              </Button>\r\n            </TableCell>\r\n          </TableRow> \r\n        </TableBody>\r\n      </Table>\r\n      <div style={{width: \"100%\", textAlign:\"center\", padding: \"30px 0\"}}>\r\n        <Button \r\n          style={{\r\n            background: grey[50],\r\n            boxShadow: '0 0 3px rgba(0, 0, 0, 0.3)',\r\n          }}\r\n          size=\"large\"\r\n          type=\"button\"\r\n          color=\"primary\"\r\n          component={NavLink}\r\n          to=\"/todoList/\"\r\n        >\r\n          Home\r\n        </Button>\r\n      </div>\r\n    </>\r\n  )\r\n  \r\n}","import React from 'react';\nimport './timer.css';\nimport { Button } from '@material-ui/core';\nimport { blue } from '@material-ui/core/colors';\nimport { connect } from 'react-redux';\nimport { Route } from 'react-router-dom';\nimport {\n  BarChart,\n  Bar,\n  XAxis,\n  YAxis,\n  Legend,\n  CartesianGrid,\n  ResponsiveContainer,\n} from 'recharts';\nimport { MyModal } from '../modal/modal';\nimport { TabMain } from '../tabs/tabMain';\nimport { HomePage } from '../home/home';\nimport { ErrorIdTask } from '../errors/error';\nimport { TaskInfo } from '../info/taskInfo';\nimport { mapStateToProps, mapDispathToProps } from '../../store/actions';\n\n\nclass Timer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      timer: null,\n    };\n    this.inputRef = React.createRef();\n  }\n\n  componentDidMount() {\n    const { timeRunning, startLastTask, tick } = this.props;\n    if (timeRunning === 'stop') {\n      const timer = setInterval(() => tick(startLastTask), 1000);\n      this.setState({ timer });\n    }\n  }\n\n  addInterval = () => {\n    const { changeRunTime, addNewTask, tick } = this.props;\n    const start = new Date();\n    addNewTask({ start: start.getTime(), hour: start.getHours(), isCompleted: false });\n    changeRunTime('stop');\n\n    // Redux saga\n    const timer = setInterval(() => tick(start), 1000);\n    this.setState({ timer });\n  }\n\n  removeInterval = () => {\n    const {\n      canAddTask,\n      verificationCanAddTask,\n      changeErrorStatus,\n      counter,\n      removeCounter,\n      changeRunTime,\n      finishTask,\n      modalControler,\n    } = this.props;\n    const { timer } = this.state;\n\n    if (canAddTask) {\n      clearInterval(timer);\n      changeRunTime('start');\n      finishTask({\n        end: new Date().getTime(),\n        spend: counter,\n        name: this.inputRef.current.value,\n        isCompleted: true,\n      });\n      removeCounter();\n      changeErrorStatus(false);\n      verificationCanAddTask(false);\n      this.inputRef.current.value = '';\n    } else {\n      changeErrorStatus(true);\n      modalControler(true);\n      this.inputRef.current.focus();\n    }\n  }\n\n  tabMainLog = () => {\n    const { deleteTask, changeTabActive, tasks } = this.props;\n    changeTabActive(0);\n    return (\n      <TabMain deleteTask={deleteTask} tasks={tasks} timeToString={this.timeToString} />\n    );\n  }\n\n  tabMainChart = () => {\n    const { changeTabActive, tasks, tasksGenerator } = this.props;\n    const chartsArray = [];// Перенести массив в initial state, не создавать сдеся.\n    changeTabActive(1);\n\n    for (let i = 0; i < 24; i++) {\n      chartsArray.push({ hour: i, duration: 0 });\n    }\n\n    // //Тестовый массив для графика, пока нет GENERATE.\n    // const data = [\n    //   {id:1582506447864, start: 1582506447864, end: 1582506451913, spend: 400111, isCompleted: true, hour: 3, name:\"1\" },\n    //   {id:1582506447865, start: 1582506447865, end: 1582506451914, spend: 200000, isCompleted: true, hour: 4, name:\"1\" },\n    //   {id:1582506447866, start: 1582506447866, end: 1582506451915, spend: 564564, isCompleted: true, hour: 5, name:\"1\" },\n    //   {id:1582506447867, start: 1582506447867, end: 1582506451916, spend: 400111, isCompleted: true, hour: 6, name:\"1\" },\n    //   {id:1582506447868, start: 1582506447868, end: 1582506451917, spend: 7800000, isCompleted: true, hour: 7, name:\"1\" }\n    // ];\n\n    chartsArray.map((chart, index) => {\n      tasks.map((task) => {\n        const minutesLeft = 60 - new Date(task.start).getMinutes();\n        if (chart.hour === task.hour) {\n          const spendToMinuts = (task.spend / 1000 / 60);\n          if (spendToMinuts < minutesLeft + 1) {\n            chart.duration += spendToMinuts;\n          } else if (index + 1 < 24) {\n            chartsArray[index + 1].duration = chart.duration + spendToMinuts - minutesLeft;\n            chart.duration += minutesLeft;\n          }\n        } else if (chart.duration > 60) {\n          chart.duration = 60;\n          if (index + 1 < 24) {\n            chartsArray[index + 1].duration = chart.duration - 60;\n          }// Не забыть про 0 index;\n        } // Баг tasl.duration > 120 min\n        return task;\n      });\n      return chart;\n    });\n\n    // Логика и разметка, не хорошо.\n\n    return (\n      <>\n        <ResponsiveContainer height={430}>\n          <BarChart\n            data={chartsArray}\n            margin={{\n              top: 50,\n              right: 20,\n              bottom: 50,\n              left: 20,\n            }}\n          >\n            <CartesianGrid strokeDasharray=\"3 3\" />\n            <XAxis dataKey=\"hour\" domain={[0, 24]} />\n            <YAxis domain={[0, 60]} />\n            <Legend />\n            <Bar name=\"Minuts in this hours\" dataKey=\"duration\" fill={blue[900]} width={30} />\n          </BarChart>\n        </ResponsiveContainer>\n        <Button style={{ position: 'fixed', bottom: 50, right: 50 }} variant=\"contained\" onClick={tasksGenerator}>generate</Button>\n      </>\n    );\n  }\n\n  closeModal = () => {\n    const { modalControler } = this.props;\n    modalControler(false);\n  }\n\n  taskInfo = (props) => {\n    const { deleteTask, tasks } = this.props;\n    let mustReturn = <ErrorIdTask paramsId={props.match.params.id} />;\n    if (tasks.length > 0) {\n      tasks.map((task) => {\n        if (+props.match.params.id === task.id) {\n          mustReturn = <TaskInfo deleteTask={deleteTask} task={task} timeToString={this.timeToString} />;\n        }\n      });\n    }\n    return mustReturn;\n  }\n\n  homePage = () => {\n    const {\n      error,\n      timeRunning,\n      counter,\n      varificationInput,\n      tabValue,\n      modalIsOpen,\n    } = this.props;\n    return (\n      <>\n        <MyModal\n          modalIsOpen={modalIsOpen}\n          closeModal={this.closeModal}\n          timeToString={this.timeToString}\n        />\n        <HomePage\n          error={error}\n          counter={counter}\n          varificationInput={varificationInput}\n          tabValue={tabValue}\n          timeRunning={timeRunning}\n          inputRef={this.inputRef}\n          timeToString={this.timeToString}\n          addInterval={this.addInterval}\n          removeInterval={this.removeInterval}\n          tabMainLog={this.tabMainLog}\n          tabMainChart={this.tabMainChart}\n        />\n      </>\n    );\n  }\n\n  timeToString = (counter) => {\n    const hours = Math.floor((counter / 1000 / 60 / 60) % 60);\n    const minuts = Math.floor((counter / 1000 / 60) % 60);\n    const seconds = Math.floor((counter / 1000) % 60);\n    return `${(hours < 10 ? `0${hours}` : hours)}:${(minuts < 10 ? `0${minuts}` : minuts)}:${(seconds < 10 ? `0${seconds}` : seconds)} `;\n  }\n\n\n  render() {\n    return (\n      <>\n        <Route exact path=\"/todoList/\" component={this.homePage} />\n        <Route path=\"/todoList/task/:id\" component={this.taskInfo} />\n        <Route path=\"/todoList/tasks-chart\" component={this.homePage} />\n      </>\n    );\n  }\n}\n\nexport default connect(mapStateToProps, mapDispathToProps)(Timer);\n","import React from 'react';\nimport './App.css';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport store from './store/reducer';\nimport Timer from './components/timer/timer';\n\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <BrowserRouter>\n        <Timer />\n      </BrowserRouter>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost'\n  // [::1] is the IPv6 localhost address.\n  || window.location.hostname === '[::1]'\n  // 127.0.0.0/8 are considered localhost for IPv4.\n  || window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n  ),\n);\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      const rgstr = registration;\n      rgstr.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all '\n                + 'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404\n        || (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service '\n            + 'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}